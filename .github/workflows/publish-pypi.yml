name: Publish Pypi
on:
  release:
    types: [ published ]

jobs:
  publish_to_pypi:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3

      - name: get version from tag
        id: get_version
        run: |
          realversion="${GITHUB_REF/refs\/tags\//}"
          realversion="${realversion//v/}"
          echo "::set-output name=VERSION::$realversion"

      - name: Set the version for publishing
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "pyproject.toml"
          key: "tool.poetry.version"
          value: "${{ steps.get_version.outputs.VERSION }}"

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

#      - name: Cache Poetry virtualenv
#        uses: actions/cache@v1
#        id: cache
#        with:
#          path: ~/.virtualenvs
#          key: poetry-${{ hashFiles('**/poetry.lock') }}
#          restore-keys: |
#            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        run: |
          sudo apt-get install -y python-setuptools python3-setuptools
          pip install poetry
          poetry config virtualenvs.create false
          poetry export --dev --without-hashes -o dev_requirements.txt
          pip install -r dev_requirements.txt
          pip install twine wheel

      - name: Build package
        run: |
          python setup.py build
          python setup.py sdist bdist_wheel

      - name: Publish to Pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
